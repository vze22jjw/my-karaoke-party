// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DATABASE_URL_NON_POOLING")
}

model Video {
    id        String   @id
    title     String
    artist    String
    song      String
    coverUrl  String
    createdAt DateTime @default(now())
    duration  String
}

model Party {
    id             Int            @id @default(autoincrement())
    hash           String?        @unique
    name           String
    createdAt      DateTime       @default(now())
    lastActivityAt DateTime       @default(now())
    playlistItems  PlaylistItem[]
    participants   PartyParticipant[]

    @@index([hash])
    @@index([lastActivityAt])
}

model PartyParticipant {
    id        Int      @id @default(autoincrement())
    partyId   Int
    party     Party    @relation(fields: [partyId], references: [id], onDelete: Cascade)
    name      String
    joinedAt  DateTime @default(now())

    @@unique([partyId, name])
    @@index([partyId])
}

model PlaylistItem {
    id         Int       @id @default(autoincrement())
    partyId    Int
    party      Party     @relation(fields: [partyId], references: [id], onDelete: Cascade)
    videoId    String
    title      String
    artist     String?
    song       String?
    coverUrl   String
    duration   String?
    singerName String
    addedAt    DateTime  @default(now())
    playedAt   DateTime?
    orderIndex Int       @default(0)
    randomBreaker Float? // New field for fair queue tie-breaker

    @@index([partyId])
    @@index([playedAt])
}
